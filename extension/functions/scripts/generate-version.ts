// scripts/generate-version.ts
// Reads version from package.json and generates a TypeScript constant
import {readFileSync, writeFileSync, mkdirSync} from "fs";
import {join} from "path";

const packageJsonPath = join(__dirname, "../package.json");
const outputDir = join(__dirname, "../src/generated");
const outputPath = join(outputDir, "version.ts");

try {
  // Read package.json
  const content = readFileSync(packageJsonPath, "utf8");
  const pkg = JSON.parse(content);

  if (!pkg.version) {
    throw new Error("No version found in package.json");
  }

  const version = pkg.version;

  // Create generated directory
  mkdirSync(outputDir, {recursive: true});

  // Write version file
  const code = `// Auto-generated by scripts/generate-version.ts - DO NOT EDIT
// Source: package.json
export const FIREGEN_VERSION = '${version}';
`;

  writeFileSync(outputPath, code, "utf8");
  console.log(`✅ Generated version constant: ${version}`);
} catch (error) {
  console.error("❌ Failed to generate version:", error);
  process.exit(1);
}
