// scripts/inject-version.ts
import {readFileSync, writeFileSync, mkdirSync} from "fs";
import {join} from "path";

const extensionYamlPath = join(__dirname, "../../extension.yaml");
const outputDir = join(__dirname, "../src/generated");
const outputPath = join(outputDir, "version.ts");

try {
  // Read extension.yaml
  const content = readFileSync(extensionYamlPath, "utf8");
  
  // Simple regex parse to avoid yaml dependency (same as before)
  const versionMatch = content.match(/^version:\s*(.+)$/m);
  if (!versionMatch) {
    throw new Error("Could not find version in extension.yaml");
  }
  
  const version = versionMatch[1].trim();

  // Create generated directory
  mkdirSync(outputDir, {recursive: true});

  // Write version file
  const code = `// Auto-generated by scripts/inject-version.ts - DO NOT EDIT
// Source: extension/extension.yaml
export const FIREGEN_VERSION = '${version}';
`;

  writeFileSync(outputPath, code, "utf8");
  console.log(`✅ Injected version: ${version}`);
} catch (error) {
  console.error("❌ Failed to inject version:", error);
  process.exit(1);
}
